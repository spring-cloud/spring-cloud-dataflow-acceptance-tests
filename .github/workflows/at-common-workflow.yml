name: at-common-workflow

# Controls when the workflow will run
on:
  workflow_call:
    secrets:
      CF_USERNAME:
        required: true
      CF_ENV_0_PASSWORD:
        required: true
      CF_ENV_1_PASSWORD:
        required: true
      SQL_USERNAME:
        required: false
      SQL_PASSWORD:
        required: false
      SQL_SYSTEM_USERNAME:
        required: false
      SQL_SYSTEM_PASSWORD:
        required: false
      SQL_HOST:
        required: false
      SQL_PORT:
        required: false
      KAFKA_USERNAME:
        required: false
      KAFKA_PASSWORD:
        required: false
      KAFKA_BROKER_ADDRESS:
        required: false

    inputs:
      sql_provider:
        default: postgresql
        required: false
        type: string
      sql_service_name:
        required: false
        type: string
      sql_system_user:
        required: false
        type: string
      sql_system_password:
        required: false
        type: string
      scheduler:
        default: true
        required: false
        type: boolean
      environment:
        default: scdf_at
        required: false
        type: string
      binder:
        required: true
        type: string
      cf_host:
        required: true
        type: string
      cf_index:
        required: true
        type: string

jobs:
  acceptance-tests:
    environment: scdf_at
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: 'Ensure scripts executable'
        shell: bash
        run: chmod a+x ./scripts/*.sh
      - uses: actions/setup-java@v2
        with:
          java-version: '8'
          cache: maven
          distribution: liberica
      - uses: jvalkeal/setup-maven@v1
        with:
          maven-version: 3.8.2
      - name: resolve cf-password
        env:
          PASSWORD_KEY: ${{ format('CF_ENV_{0}_PASSWORD', inputs.cf_index) }}
        run: echo "SPRING_CLOUD_DEPLOYER_CLOUDFOUNDRY_PASSWORD=${{ secrets[env.PASSWORD_KEY] }}" >> $GITHUB_ENV
      - name: Setup Environment ${{ inputs.binder }}-${{ inputs.cf_index }}
        env:
          # DEBUG: true
          SCHEDULER: ${{ inputs.scheduler }}
          BINDER: ${{ inputs.binder }}
          MAVEN_REPOS: '{"repo1":"https://repo.spring.io/libs-snapshot"}'
          SPRING_CLOUD_DEPLOYER_CLOUDFOUNDRY_SPACE: ${{ inputs.binder }}
          SPRING_CLOUD_DEPLOYER_CLOUDFOUNDRY_SKIP_SSL_VALIDATION: false
          SPRING_CLOUD_DEPLOYER_CLOUDFOUNDRY_TASK_SERVICES: scdf-scheduler
          SPRING_CLOUD_DEPLOYER_CLOUDFOUNDRY_URL: "https://api.sys.${{ inputs.cf_host }}.cf-app.com"
          SPRING_CLOUD_DEPLOYER_CLOUDFOUNDRY_DOMAIN: "apps.${{ inputs.cf_host }}.cf-app.com"
          SPRING_CLOUD_DEPLOYER_CLOUDFOUNDRY_ORG: p-dataflow
          SPRING_CLOUD_DEPLOYER_CLOUDFOUNDRY_USERNAME: ${{ secrets.CF_USERNAME }}
          SQL_HOST: ${{ secrets.SQL_HOST }}
          SQL_PORT: ${{ secrets.SQL_PORT }}
          SQL_PASSWORD: ${{ secrets.SQL_PASSWORD }}
          SQL_USERNAME: ${{ secrets.SQL_USERNAME }}
          SQL_PROVIDER: ${{ inputs.sql_provider }}
          SQL_SERVICE_NAME: ${{ inputs.sql_service_name }}
          SQL_SYSTEM_PASSWORD: ${{ secrets.SQL_SYSTEM_PASSWORD }}
          SQL_SYSTEM_USERNAME: ${{ secrets.SQL_SYSTEM_USERNAME }}
          SQL_DATAFLOW_DB_NAME: "dataflow_pro_1_5_0_${{ inputs.binder }}_${{ inputs.cf_index }}"
          KAFKA_BROKER_ADDRESS: ${{ secrets.KAFKA_BROKER_ADDRESS }}
          KAFKA_USERNAME: ${{ secrets.KAFKA_USERNAME }}
          KAFKA_PASSWORD: ${{ secrets.KAFKA_PASSWORD }}
          PLATFORM: tile
        run: |
          echo "Setup Environment"
          export SETUP_TOOL_REPO="scdf_cf_setup"
          echo "SETUP_TOOL_REPO=$SETUP_TOOL_REPO" >> $GITHUB_ENV
          source ./scripts/at-setup.sh
          echo "SPRING_CLOUD_DATAFLOW_CLIENT_SERVER_URI=$SPRING_CLOUD_DATAFLOW_CLIENT_SERVER_URI" >> $GITHUB_ENV
          echo "STREAM_APPS_URI=$STREAM_APPS_URI" >> $GITHUB_ENV
          echo "SPRING_CLOUD_DATAFLOW_CLIENT_AUTHENTICATION_ACCESS_TOKEN=$SPRING_CLOUD_DATAFLOW_CLIENT_AUTHENTICATION_ACCESS_TOKEN" >> $GITHUB_ENV
      - name: Execute Tests
        env:
          # DEBUG: true
          SCHEDULER: ${{ inputs.scheduler }}
          BINDER: ${{ inputs.binder }}
          MAVEN_REPOS: '{"repo1":"https://repo.spring.io/libs-snapshot"}'
          SPRING_CLOUD_DEPLOYER_CLOUDFOUNDRY_SPACE: ${{ inputs.binder }}
          SPRING_CLOUD_DEPLOYER_CLOUDFOUNDRY_SKIP_SSL_VALIDATION: false
          SPRING_CLOUD_DEPLOYER_CLOUDFOUNDRY_TASK_SERVICES: scdf-scheduler
          SPRING_CLOUD_DEPLOYER_CLOUDFOUNDRY_URL: "https://api.sys.${{ inputs.cf_host }}.cf-app.com"
          SPRING_CLOUD_DEPLOYER_CLOUDFOUNDRY_DOMAIN: "apps.${{ inputs.cf_host }}.cf-app.com"
          SPRING_CLOUD_DEPLOYER_CLOUDFOUNDRY_ORG: p-dataflow
          SPRING_CLOUD_DEPLOYER_CLOUDFOUNDRY_USERNAME: ${{ secrets.CF_USERNAME }}
          SQL_HOST: ${{ secrets.SQL_HOST }}
          SQL_PORT: ${{ secrets.SQL_PORT }}
          SQL_PASSWORD: ${{ secrets.SQL_PASSWORD }}
          SQL_USERNAME: ${{ secrets.SQL_USERNAME }}
          SQL_PROVIDER: ${{ inputs.sql_provider }}
          SQL_SERVICE_NAME: ${{ inputs.sql_service_name }}
          SQL_SYSTEM_PASSWORD: ${{ secrets.SQL_SYSTEM_PASSWORD }}
          SQL_SYSTEM_USERNAME: ${{ secrets.SQL_SYSTEM_USERNAME }}
          SQL_DATAFLOW_DB_NAME: "dataflow_pro_1_5_0_${{ inputs.binder }}_${{ inputs.cf_index }}"
          KAFKA_BROKER_ADDRESS: ${{ secrets.KAFKA_BROKER_ADDRESS }}
          KAFKA_USERNAME: ${{ secrets.KAFKA_USERNAME }}
          KAFKA_PASSWORD: ${{ secrets.KAFKA_PASSWORD }}
          PLATFORM: tile
        run: |
          echo "Building timestamp-batch-with-drivers-template1"
          pushd acceptance-tests/custom-apps/timestamp-batch-with-drivers-template1 > /dev/null
            ./gradlew build install
          popd > /dev/null
          echo "Starting  Acceptance Tests"
          ./scripts/at-test-script.sh
          echo "Completed Acceptance Tests"
      - name: Upload Unit Test Results
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: test-results-surefire-${{ inputs.binder }}-${{ inputs.cf_index }}-${{ github.run_number }}-${{ github.run_attempt }}
          path: './**/target/surefire-reports/**/*.*'
          retention-days: 7
          if-no-files-found: ignore
      - name: Upload Integration Test Results
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: test-results-failsafe-${{ inputs.binder }}-${{ inputs.cf_index }}-${{ github.run_number }}-${{ github.run_attempt }}
          path: './**/target/failsafe-reports/**/*.*'
          retention-days: 7
          if-no-files-found: ignore
      - name: Upload Test Site
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: test-site-${{ inputs.binder }}-${{ inputs.cf_index }}-${{ github.run_number }}-${{ github.run_attempt }}-failsafe-report.html
          path: './**/target/site/failsafe-report.html'
          retention-days: 7
          if-no-files-found: ignore
      - name: Cleanup
        if: ${{ always() }}
        env:
          # DEBUG: true
          SCHEDULER: ${{ inputs.scheduler }}
          BINDER: ${{ inputs.binder }}
          MAVEN_REPOS: '{"repo1":"https://repo.spring.io/libs-snapshot"}'
          SPRING_CLOUD_DEPLOYER_CLOUDFOUNDRY_SPACE: ${{ inputs.binder }}
          SPRING_CLOUD_DEPLOYER_CLOUDFOUNDRY_SKIP_SSL_VALIDATION: false
          SPRING_CLOUD_DEPLOYER_CLOUDFOUNDRY_TASK_SERVICES: scdf-scheduler
          SPRING_CLOUD_DEPLOYER_CLOUDFOUNDRY_URL: "https://api.sys.${{ inputs.cf_host }}.cf-app.com"
          SPRING_CLOUD_DEPLOYER_CLOUDFOUNDRY_DOMAIN: "apps.${{ inputs.cf_host }}.cf-app.com"
          SPRING_CLOUD_DEPLOYER_CLOUDFOUNDRY_ORG: p-dataflow
          SPRING_CLOUD_DEPLOYER_CLOUDFOUNDRY_USERNAME: ${{ secrets.CF_USERNAME }}
          SQL_HOST: ${{ secrets.SQL_HOST }}
          SQL_PORT: ${{ secrets.SQL_PORT }}
          SQL_PASSWORD: ${{ secrets.SQL_PASSWORD }}
          SQL_USERNAME: ${{ secrets.SQL_USERNAME }}
          SQL_PROVIDER: ${{ inputs.sql_provider }}
          SQL_SERVICE_NAME: ${{ inputs.sql_service_name }}
          SQL_SYSTEM_PASSWORD: ${{ secrets.SQL_SYSTEM_PASSWORD }}
          SQL_SYSTEM_USERNAME: ${{ secrets.SQL_SYSTEM_USERNAME }}
          SQL_DATAFLOW_DB_NAME: "dataflow_pro_1_5_0_${{ inputs.binder }}_${{ inputs.cf_index }}"
          KAFKA_BROKER_ADDRESS: ${{ secrets.KAFKA_BROKER_ADDRESS }}
          KAFKA_USERNAME: ${{ secrets.KAFKA_USERNAME }}
          KAFKA_PASSWORD: ${{ secrets.KAFKA_PASSWORD }}
          PLATFORM: tile
        shell: bash
        run: ./scripts/at-cleanup.sh
